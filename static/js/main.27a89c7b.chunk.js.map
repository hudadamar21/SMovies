{"version":3,"sources":["assets/images/sans.jpg","globalState/States.js","component/Navbar.js","component/Card.js","component/DetailMovie.js","component/FavoriteMovies.js","views/Main.js","views/About.js","views/Donate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createStore","state","action","type","keyword","value","imdbID","isDetail","toggleShow","isSearch","dispatch","useGlobalState","withRouter","props","useState","search","setSearch","showSearch","document","querySelector","focus","history","push","className","name","navname","map","nav","i","key","onClick","onChange","e","target","placeholder","to","Card","id","src","image","alt","title","year","DetailMovie","detail","setDetail","isLoading","setIsLoading","useEffect","getDetailMovie","a","fetch","then","res","json","data","style","backgroundImage","Poster","Title","Year","Director","Actors","Genre","imdbRating","Released","Runtime","Plot","FavoriteMovies","favMovies","setFavMovies","favMovieID","length","movie","Type","Main","movies","setMovies","isError","setError","x","window","scrollX","y","scrollY","onscroll","scrollTo","body","addEventListener","getMovies","Search","catch","error","toString","undefined","About","sosmed","url","icon","faFacebook","color","faLinkedin","faYoutube","faInstagram","sans","height","width","faUser","href","rel","Donate","role","aria-label","el","createElement","setAttribute","visibility","display","appendChild","select","execCommand","removeChild","alert","App","basename","path","exact","component","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.27a89c7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sans.602d77cc.jpg\";","import {createStore} from 'react-hooks-global-state';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type){\r\n    case 'SetKeyword' : return {...state, keyword: action.value}\r\n    case 'SetImdbID' : return {...state, imdbID: action.value}\r\n    case 'SetIsDetail' : return {...state, isDetail: action.value}\r\n    case 'SetToggleShow' : return {...state, toggleShow: action.value}\r\n    default: return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n            keyword: '',\r\n            isSearch: false,\r\n            imdbID : '',\r\n            isDetail: false,\r\n            toggleShow: false,\r\n          };\r\n\r\nexport const {dispatch, useGlobalState} = createStore(reducer, initialState);\r\n\r\n","import React, {Fragment, useState} from 'react';\r\nimport {useGlobalState, dispatch} from '../globalState/States';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport './Styles/navbar.css'\r\n\r\nfunction Navbar (props){\r\n  const [search, setSearch] = useState(false);\r\n  // const [toggleShow, setToggleShow] = useState(false)\r\n  const [keyword] = useGlobalState('keyword')\r\n  const [toggleShow] = useGlobalState('toggleShow')\r\n  \r\n  const showSearch = () => {\r\n    if(search === false){\r\n      setSearch(true)\r\n    }\r\n    const inputSearch = document.querySelector('.input-search');\r\n    inputSearch.focus()\r\n    props.history.push('/')\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      <nav>\r\n        <h3 className=\"web-name\">{props.name}</h3>\r\n        \r\n        <ul className={toggleShow ? 'show-nav' : ''}>\r\n          { \r\n            props.navname.map((nav, i) => {\r\n            return (\r\n              <Fragment key={i}>\r\n              {\r\n                nav === 'search'\r\n                  ? <li className={`search ${search ? 'active' : ''}`}\r\n                        onClick={showSearch}>\r\n                        {!search ? 'Search' : ''}\r\n                      <div className={`search-nav ${search ? 'show-input-search' : ''}`}>\r\n                      <input className='input-search' value={keyword}\r\n                            onChange={(e) => dispatch({type: 'SetKeyword', value: e.target.value})}\r\n                            placeholder=\"search movie..\"/>\r\n                      <button className=\"close-search\" onClick={()=> {\r\n                          setSearch(false)\r\n                          dispatch({type: 'SetKeyword', value: ''})\r\n                      }}>x</button>\r\n                      </div>\r\n                    </li>\r\n                  : nav === 'home'\r\n                  ? <li onClick={()=> {dispatch({type: 'SetToggleShow', value: false})}}>\r\n                      <Link to={`/`}>{nav}</Link>\r\n                    </li>\r\n                  : <li onClick={()=> {\r\n                        setSearch(false)\r\n                        dispatch({type: 'SetToggleShow', value: false})\r\n                      }}>\r\n                      <Link to={`/${nav}`}>{nav}</Link>\r\n                    </li>\r\n              }\r\n              </Fragment>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        <div className={`menu-toggle ${toggleShow ? 'show-toggle' : ''}`}\r\n             onClick={()=> dispatch({type: 'SetToggleShow', value: !toggleShow})}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React from 'react';\r\nimport {dispatch} from '../globalState/States';\r\nimport './Styles/card.css';\r\n\r\nfunction Card (props){\r\n\r\n  return(\r\n      <div key={props.id} className=\"card\" onClick={() => {\r\n        dispatch({type: 'SetImdbID', value: props.id})\r\n        dispatch({type: 'SetIsDetail', value: true})\r\n        \r\n      }}>\r\n        <div className=\"image\">\r\n          <img src={props.image} alt=\"mai\"/>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <h3 className=\"title\">{props.title} (<span>{props.year}</span>)</h3>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\nexport default Card;","import React, {useState, Fragment, useEffect } from 'react';\r\nimport { useGlobalState, dispatch} from '../globalState/States';\r\nimport './Styles/detailMovie.css';\r\n\r\nfunction DetailMovie (){\r\n  let [detail, setDetail] = useState([])\r\n  const [imdbID] = useGlobalState('imdbID')\r\n  let [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getDetailMovie(imdbID);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n  \r\n  const getDetailMovie = async (imdbID) => {\r\n    setIsLoading(isLoading=true)\r\n    await fetch(`https://www.omdbapi.com/?i=${imdbID}&apikey=2f1d5a46`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setDetail(detail = data)\r\n      setIsLoading(isLoading=false)\r\n      })\r\n  }\r\n  return(\r\n    <Fragment>\r\n      <div className=\"overlay\"></div>\r\n      <div className=\"detail-card\">\r\n        {\r\n          !isLoading\r\n          ? \r\n          <Fragment>\r\n          <div className=\"poster\" style={{ backgroundImage: `url(${detail.Poster})` }}></div>\r\n        <div className=\"detail-desc\">\r\n          <h2 className=\"title-detail\">{detail.Title} ({detail.Year})</h2>\r\n          <ul>\r\n            <li>- Director : {detail.Director}</li>\r\n            <li>- Actor : {detail.Actors}</li>\r\n            <li>- Genre : {detail.Genre}</li>\r\n            <li>- Rating : {detail.imdbRating}</li>\r\n            <li>- Tgl Rilis : {detail.Released}</li>\r\n            <li>- Waktu : {detail.Runtime}</li>\r\n            <li>- Sinopsis : <p>{detail.Plot}</p></li>\r\n          </ul>\r\n        <button className=\"close-detail\" onClick={()=> {\r\n          dispatch({type: 'SetIsDetail', value: false})\r\n          setDetail(detail = [])\r\n        }}></button>\r\n        </div>\r\n          </Fragment>\r\n        : <h3 className=\"is-loading\">Loading..</h3>\r\n        }\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DetailMovie;","import React, {useState, useEffect } from 'react';\r\nimport Card from './Card';\r\n\r\nimport './Styles/favmovies.css';\r\n\r\n\r\nfunction FavoriteMovies (){\r\n\r\n  const [favMovies, setFavMovies] = useState([])\r\n  const favMovieID = ['tt0884328', 'tt1028532','tt0209144','tt0468569']\r\n  \r\n  const getFavMovie = (imdbid) => {\r\n     fetch(`https://www.omdbapi.com/?i=${imdbid}&apikey=2f1d5a46`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setFavMovies(state => [...state, data])\r\n      })\r\n  }\r\n  \r\n  useEffect(()=> {\r\n      favMovieID.map(id=> getFavMovie(id))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[favMovieID.length])\r\n\r\n  return (\r\n    <div className=\"container-favmovies\">\r\n      <h3>My Favorite Movies</h3>\r\n      <div className=\"favmovies\"> \r\n      {\r\n        favMovies.map((movie, i) => {\r\n          return (\r\n            <div key={i}>\r\n              <Card\r\n                id={movie.imdbID}\r\n                image={movie.Poster}\r\n                title={movie.Title}\r\n                year={movie.Year}\r\n                type={movie.Type}\r\n              />\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FavoriteMovies;","import React, {useState,useEffect, Fragment} from 'react';\r\nimport { useGlobalState, dispatch} from '../globalState/States';\r\nimport './Styles/main.css';\r\nimport Card from '../component/Card';\r\nimport DetailMovie from '../component/DetailMovie';\r\nimport FavoriteMovies from '../component/FavoriteMovies';\r\n\r\nfunction Main (){\r\n  const [movies, setMovies] = useState([])\r\n  const [keyword] = useGlobalState('keyword')\r\n  const [isDetail] = useGlobalState('isDetail')\r\n  const [isError, setError] = useState('')\r\n\r\n  if(isDetail){\r\n      const x = window.scrollX;\r\n      const y = window.scrollY;\r\n      window.onscroll= () => window.scrollTo(x, y);\r\n      \r\n  } else{\r\n    window.onscroll = function(){};\r\n  }\r\n  document.body.addEventListener('click',function () {\r\n    dispatch({type: 'SetToggleShow', value: false})\r\n  });\r\n\r\n  useEffect(() => {\r\n    getMovies(keyword)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [keyword.length]) \r\n\r\n  const getMovies = (keyword) => {\r\n     fetch(`https://www.omdbapi.com/?s=${keyword}&apikey=2f1d5a46`)\r\n      .then(res => res.json())\r\n      .then( (data) => setMovies(data.Search))\r\n      .catch(error => setError(state => state = error.toString()))\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n        <main className=\"container\" >\r\n            { \r\n              isError ? <div className=\"error\"><h3>{isError === 'TypeError: Failed to fetch' ? 'Tidak ada Koneksi internet' : isError }</h3></div> \r\n              : movies ? movies.map((movie, i) => {\r\n                return (\r\n                 <div key={i}>\r\n                 <Card\r\n                    id={movie.imdbID}\r\n                    image={movie.Poster}\r\n                    title={movie.Title}\r\n                    year={movie.Year}\r\n                    type={movie.Type}\r\n                  />\r\n                 </div>\r\n                )\r\n              })\r\n              : keyword.length > 0 && movies === undefined\r\n                ? <div className=\"error\"><h3>Movies not Found</h3></div>\r\n              : <FavoriteMovies/>\r\n            }\r\n            { isDetail ? <DetailMovie/> : '' }\r\n        </main>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './Styles/about.css';\r\nimport sans from '../assets/images/sans.jpg';\r\n\r\n// get our fontawesome imports\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faFacebook,\r\n  faLinkedin,\r\n  faYoutube,\r\n  faInstagram\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction About (){\r\n  const sosmed = [\r\n    {\r\n      url: 'https://www.facebook.com/hudasevanfold',\r\n      icon: faFacebook,\r\n      color: 'royalblue'\r\n    },\r\n    {\r\n      url: 'https://www.linkedin.com/in/huda-damar-ba95191a0',\r\n      icon: faLinkedin,\r\n      color: 'royalblue'\r\n    },\r\n    {\r\n      url: 'https://www.youtube.com/channel/UCtoPnWKTqawtlYa9lqmEsRg',\r\n      icon: faYoutube,\r\n      color: 'red'\r\n    },\r\n    {\r\n      url: 'https://www.instagram.com/hudadamar21/',\r\n      icon: faInstagram,\r\n      color: 'red'\r\n    }\r\n  ]\r\n  return(\r\n    <section>\r\n      <div className=\"kotak\">\r\n        <div className=\"konten\">\r\n            <img src={sans} height=\"400\" width=\"600\" alt=\"sans\"/>\r\n            <h2>Huda Damar</h2>\r\n            <p>hudadamar21@gmail.com</p>\r\n        </div>\r\n        </div>\r\n        <div className=\"bola\">\r\n          <div className=\"sosmed\">\r\n            <FontAwesomeIcon icon={faUser} />\r\n          </div>\r\n        <ul>\r\n           {\r\n             sosmed.map((sosmed, i) => {\r\n               return (\r\n                <li key={i}>\r\n                  <a className=\"icon\" href={sosmed.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <FontAwesomeIcon color={sosmed.color} icon={sosmed.icon} />\r\n                  </a>\r\n                </li>\r\n               )\r\n             })\r\n           }\r\n           \r\n        </ul>\r\n    </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { Fragment } from 'react';\r\nimport './Styles/donate.css';\r\n\r\nfunction Donate (){\r\n\r\n  const CopyNumber = () => {\r\n      let el = document.createElement('textarea');\r\n      el.value = '089614266484';\r\n      el.setAttribute('readonly', '');\r\n      el.style = {visibility: 'hidden',display: 'none'};\r\n      document.body.appendChild(el);\r\n      el.select();\r\n      document.execCommand('copy');\r\n      document.body.removeChild(el);\r\n      alert('Copied')\r\n  }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"donate\">\r\n          <h2>Support Me</h2>\r\n          <p>dengan memberikan donasi berupa pulsa dengan jumlah berapapun</p>\r\n          <p>donasi seikhlasnya yaa <span role=\"img\" aria-label=\"\">😃</span></p>\r\n          <div className=\"phone-number\" onClick={CopyNumber}>\r\n            <h2>Nomor saya :</h2>\r\n            <h1>089614266484</h1>\r\n          </div>\r\n          <h5>Click untuk copy nomor</h5>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n}\r\n\r\nexport default Donate;","import React, { Component,Fragment } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\n\n// Component\nimport Navbar from './component/Navbar';\n\n// Views\nimport Main from './views/Main';\nimport About from './views/About';\nimport Donate from './views/Donate';\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Fragment>\n        <Router basename=\"/smovies\">\n        <div className=\"container\">\n          <Navbar name=\"SMovies\" navname={['search','home','about','donate']} />\n        </div>\n          <Route path=\"/\" exact component={Main}/>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/donate\" component={Donate}/>\n        </Router>\n      </Fragment>\n    ) \n  }\n}\n\n// agar dapat di import dimana saja\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n// import {createStore} from 'redux';\n// import {Provider} from 'react-redux';\n// import rootReducer from './Redux/Reducer/rootReducer';\n\n// const storeRedux = createStore(rootReducer);\n\n// ReactDOM.render(<Provider store={storeRedux}><App /></Provider>,document.getElementById('root'));\nReactDOM.render(\n        <Router>\n          <App />\n        </Router>\n        ,document.getElementById('root'));\n\n// const nama = 'Huda Damar';\n// function sapa (){\n//   return 'Halo ' + nama;\n// }\n// const element = <h1>{sapa()} !!</h1>;\n// ReactDOM.render(element, document.getElementById('nama'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}